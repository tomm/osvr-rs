use gl1x;

static MATSPEC: [f32; 4] = [ 0.5, 0.5, 0.5, 0.0 ];
static RED_COL: [f32; 3] = [ 1.0, 0.0, 0.0 ];
static GRN_COL: [f32; 3] = [ 0.0, 1.0, 0.0 ];
static BLU_COL: [f32; 3] = [ 0.0, 0.0, 1.0 ];
static YEL_COL: [f32; 3] = [ 1.0, 1.0, 0.0 ];
static LIGHTBLU_COL: [f32; 3] = [ 0.0, 1.0, 1.0 ];
static PUR_COL: [f32; 3] = [ 1.0, 0.0, 1.0 ];

pub fn draw_cube(radius: f64)
{
    gl1x::PushMatrix();
    gl1x::Scaled(radius, radius, radius);
    //gl::Materialfv(GL_FRONT, GL_SPECULAR, MATSPEC);
    //gl::Materialf(GL_FRONT, GL_SHININESS, 64.0);
    gl1x::Begin(gl1x::POLYGON);
    gl1x::Color3fv(&LIGHTBLU_COL);
    //gl::Materialfv(GL_FRONT_AND_BACK, GL_AMBIENT, LIGHTBLU_COL);
    //gl::Materialfv(GL_FRONT_AND_BACK, GL_DIFFUSE, LIGHTBLU_COL);
    gl1x::Normal3f(0.0, 0.0, -1.0);
    gl1x::Vertex3f(1.0, 1.0, -1.0);
    gl1x::Vertex3f(1.0, -1.0, -1.0);
    gl1x::Vertex3f(-1.0, -1.0, -1.0);
    gl1x::Vertex3f(-1.0, 1.0, -1.0);
    gl1x::End();
    gl1x::Begin(gl1x::POLYGON);
    gl1x::Color3fv(&BLU_COL);
    //gl::Materialfv(GL_FRONT_AND_BACK, GL_AMBIENT, BLU_COL);
    //gl::Materialfv(GL_FRONT_AND_BACK, GL_DIFFUSE, BLU_COL);
    gl1x::Normal3f(0.0, 0.0, 1.0);
    gl1x::Vertex3f(-1.0, 1.0, 1.0);
    gl1x::Vertex3f(-1.0, -1.0, 1.0);
    gl1x::Vertex3f(1.0, -1.0, 1.0);
    gl1x::Vertex3f(1.0, 1.0, 1.0);
    gl1x::End();
    gl1x::Begin(gl1x::POLYGON);
    gl1x::Color3fv(&YEL_COL);
    //gl::Materialfv(GL_FRONT_AND_BACK, GL_AMBIENT, YEL_COL);
    //gl::Materialfv(GL_FRONT_AND_BACK, GL_DIFFUSE, YEL_COL);
    gl1x::Normal3f(0.0, -1.0, 0.0);
    gl1x::Vertex3f(1.0, -1.0, 1.0);
    gl1x::Vertex3f(-1.0, -1.0, 1.0);
    gl1x::Vertex3f(-1.0, -1.0, -1.0);
    gl1x::Vertex3f(1.0, -1.0, -1.0);
    gl1x::End();
    gl1x::Begin(gl1x::POLYGON);
    gl1x::Color3fv(&GRN_COL);
    //gl::Materialfv(GL_FRONT_AND_BACK, GL_AMBIENT, GRN_COL);
    //gl::Materialfv(GL_FRONT_AND_BACK, GL_DIFFUSE, GRN_COL);
    gl1x::Normal3f(0.0, 1.0, 0.0);
    gl1x::Vertex3f(1.0, 1.0, 1.0);
    gl1x::Vertex3f(1.0, 1.0, -1.0);
    gl1x::Vertex3f(-1.0, 1.0, -1.0);
    gl1x::Vertex3f(-1.0, 1.0, 1.0);
    gl1x::End();
    gl1x::Begin(gl1x::POLYGON);
    gl1x::Color3fv(&PUR_COL);
    //gl::Materialfv(GL_FRONT_AND_BACK, GL_AMBIENT, PUR_COL);
    //gl::Materialfv(GL_FRONT_AND_BACK, GL_DIFFUSE, PUR_COL);
    gl1x::Normal3f(-1.0, 0.0, 0.0);
    gl1x::Vertex3f(-1.0, 1.0, 1.0);
    gl1x::Vertex3f(-1.0, 1.0, -1.0);
    gl1x::Vertex3f(-1.0, -1.0, -1.0);
    gl1x::Vertex3f(-1.0, -1.0, 1.0);
    gl1x::End();
    gl1x::Begin(gl1x::POLYGON);
    gl1x::Color3fv(&RED_COL);
    //gl::Materialfv(GL_FRONT_AND_BACK, GL_AMBIENT, RED_COL);
    //gl::Materialfv(GL_FRONT_AND_BACK, GL_DIFFUSE, RED_COL);
    gl1x::Normal3f(1.0, 0.0, 0.0);
    gl1x::Vertex3f(1.0, -1.0, 1.0);
    gl1x::Vertex3f(1.0, -1.0, -1.0);
    gl1x::Vertex3f(1.0, 1.0, -1.0);
    gl1x::Vertex3f(1.0, 1.0, 1.0);
    gl1x::End();
    gl1x::PopMatrix();
}
